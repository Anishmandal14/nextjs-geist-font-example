{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/NetworkMap.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useNetwork } from '@/context/NetworkContext';\nimport { Device } from '@/types/network';\n\nconst NetworkMap = () => {\n  const { devices, connections, selectedDevice, setSelectedDevice } = useNetwork();\n  const [zoom, setZoom] = useState(1);\n  const [pan, setPan] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const getDeviceColor = (device: Device) => {\n    switch (device.status) {\n      case 'online':\n        return '#22c55e'; // green-500\n      case 'offline':\n        return '#ef4444'; // red-500\n      case 'maintenance':\n        return '#f59e0b'; // amber-500\n      default:\n        return '#6b7280'; // gray-500\n    }\n  };\n\n  const getDeviceShape = (type: Device['type']) => {\n    switch (type) {\n      case 'Router':\n        return 'rect';\n      case 'Switch':\n        return 'rect';\n      case 'Firewall':\n        return 'diamond';\n      case 'Server':\n        return 'rect';\n      case 'Access Point':\n        return 'circle';\n      default:\n        return 'circle';\n    }\n  };\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    setIsDragging(true);\n    setDragStart({ x: e.clientX - pan.x, y: e.clientY - pan.y });\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (isDragging) {\n      setPan({\n        x: e.clientX - dragStart.x,\n        y: e.clientY - dragStart.y\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  const handleWheel = (e: React.WheelEvent) => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    setZoom(prev => Math.max(0.1, Math.min(3, prev * delta)));\n  };\n\n  const renderDevice = (device: Device) => {\n    const x = (device.position?.x || 0) * zoom + pan.x;\n    const y = (device.position?.y || 0) * zoom + pan.y;\n    const isSelected = selectedDevice?.id === device.id;\n    const shape = getDeviceShape(device.type);\n    const color = getDeviceColor(device);\n\n    const commonProps = {\n      onClick: () => setSelectedDevice(device),\n      className: \"cursor-pointer hover:opacity-80 transition-opacity\",\n      stroke: isSelected ? '#000' : '#374151',\n      strokeWidth: isSelected ? 3 : 1,\n      fill: color\n    };\n\n    let shapeElement;\n    \n    if (shape === 'rect') {\n      shapeElement = (\n        <rect\n          x={x - 20}\n          y={y - 15}\n          width={40}\n          height={30}\n          rx={4}\n          {...commonProps}\n        />\n      );\n    } else if (shape === 'diamond') {\n      const points = `${x},${y-20} ${x+20},${y} ${x},${y+20} ${x-20},${y}`;\n      shapeElement = (\n        <polygon\n          points={points}\n          {...commonProps}\n        />\n      );\n    } else {\n      shapeElement = (\n        <circle\n          cx={x}\n          cy={y}\n          r={20}\n          {...commonProps}\n        />\n      );\n    }\n\n    return (\n      <g key={device.id}>\n        {shapeElement}\n        <text\n          x={x}\n          y={y + 35}\n          textAnchor=\"middle\"\n          className=\"font-sans text-xs fill-gray-700 pointer-events-none\"\n        >\n          {device.name}\n        </text>\n        <text\n          x={x}\n          y={y + 48}\n          textAnchor=\"middle\"\n          className=\"font-sans text-xs fill-gray-500 pointer-events-none\"\n        >\n          {device.ip}\n        </text>\n      </g>\n    );\n  };\n\n  const renderConnection = (connection: any) => {\n    const source = devices.find(d => d.id === connection.sourceId);\n    const target = devices.find(d => d.id === connection.targetId);\n    \n    if (!source || !target) return null;\n\n    const x1 = (source.position?.x || 0) * zoom + pan.x;\n    const y1 = (source.position?.y || 0) * zoom + pan.y;\n    const x2 = (target.position?.x || 0) * zoom + pan.x;\n    const y2 = (target.position?.y || 0) * zoom + pan.y;\n\n    const lineColor = connection.type === 'fiber' ? '#3b82f6' : '#6b7280';\n    const strokeWidth = connection.type === 'fiber' ? 3 : 2;\n\n    return (\n      <g key={connection.id}>\n        <line\n          x1={x1}\n          y1={y1}\n          x2={x2}\n          y2={y2}\n          stroke={lineColor}\n          strokeWidth={strokeWidth}\n          strokeDasharray={connection.type === 'wireless' ? '5,5' : 'none'}\n          className=\"pointer-events-none\"\n        />\n        {connection.label && (\n          <text\n            x={(x1 + x2) / 2}\n            y={(y1 + y2) / 2 - 5}\n            textAnchor=\"middle\"\n            className=\"font-sans text-xs fill-gray-600 pointer-events-none\"\n          >\n            {connection.label}\n          </text>\n        )}\n      </g>\n    );\n  };\n\n  if (devices.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-full bg-gray-50 rounded-lg border-2 border-dashed border-gray-300\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-500 text-lg mb-2\">No devices found</p>\n          <p className=\"text-gray-400 text-sm\">Add devices to visualize your network</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative w-full h-full bg-white rounded-lg border shadow-sm overflow-hidden\">\n      {/* Controls */}\n      <div className=\"absolute top-4 right-4 z-10 flex flex-col gap-2\">\n        <button\n          onClick={() => setZoom(prev => Math.min(3, prev * 1.2))}\n          className=\"px-3 py-1 bg-white border rounded shadow-sm hover:bg-gray-50 text-sm font-medium\"\n        >\n          Zoom In\n        </button>\n        <button\n          onClick={() => setZoom(prev => Math.max(0.1, prev * 0.8))}\n          className=\"px-3 py-1 bg-white border rounded shadow-sm hover:bg-gray-50 text-sm font-medium\"\n        >\n          Zoom Out\n        </button>\n        <button\n          onClick={() => {\n            setZoom(1);\n            setPan({ x: 0, y: 0 });\n          }}\n          className=\"px-3 py-1 bg-white border rounded shadow-sm hover:bg-gray-50 text-sm font-medium\"\n        >\n          Reset\n        </button>\n      </div>\n\n      {/* Legend */}\n      <div className=\"absolute top-4 left-4 z-10 bg-white border rounded shadow-sm p-3\">\n        <h4 className=\"font-medium text-sm mb-2\">Legend</h4>\n        <div className=\"space-y-1 text-xs\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 bg-green-500 rounded\"></div>\n            <span>Online</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 bg-red-500 rounded\"></div>\n            <span>Offline</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 bg-amber-500 rounded\"></div>\n            <span>Maintenance</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-1 bg-blue-500\"></div>\n            <span>Fiber</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-1 bg-gray-500\"></div>\n            <span>Ethernet</span>\n          </div>\n        </div>\n      </div>\n\n      {/* SVG Canvas */}\n      <svg\n        ref={svgRef}\n        width=\"100%\"\n        height=\"100%\"\n        className=\"cursor-grab active:cursor-grabbing\"\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseUp}\n        onWheel={handleWheel}\n      >\n        {/* Render connections first (behind devices) */}\n        {connections.map(renderConnection)}\n        \n        {/* Render devices */}\n        {devices.map(renderDevice)}\n      </svg>\n\n      {/* Device Details Panel */}\n      {selectedDevice && (\n        <div className=\"absolute bottom-4 right-4 z-10 bg-white border rounded-lg shadow-lg p-4 w-80\">\n          <div className=\"flex justify-between items-start mb-3\">\n            <h3 className=\"font-semibold text-lg\">{selectedDevice.name}</h3>\n            <button\n              onClick={() => setSelectedDevice(null)}\n              className=\"text-gray-400 hover:text-gray-600 text-xl leading-none\"\n            >\n              Ã—\n            </button>\n          </div>\n          <div className=\"space-y-2 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"font-medium\">Type:</span>\n              <span>{selectedDevice.type}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"font-medium\">IP Address:</span>\n              <span className=\"font-mono\">{selectedDevice.ip}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"font-medium\">Status:</span>\n              <span className={`px-2 py-1 rounded text-xs font-medium ${\n                selectedDevice.status === 'online' ? 'bg-green-100 text-green-800' :\n                selectedDevice.status === 'offline' ? 'bg-red-100 text-red-800' :\n                'bg-amber-100 text-amber-800'\n              }`}>\n                {selectedDevice.status.charAt(0).toUpperCase() + selectedDevice.status.slice(1)}\n              </span>\n            </div>\n            {selectedDevice.location && (\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Location:</span>\n                <span>{selectedDevice.location}</span>\n              </div>\n            )}\n            {selectedDevice.vendor && (\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Vendor:</span>\n                <span>{selectedDevice.vendor}</span>\n              </div>\n            )}\n            {selectedDevice.model && (\n              <div className=\"flex justify-between\">\n                <span className=\"font-medium\">Model:</span>\n                <span>{selectedDevice.model}</span>\n              </div>\n            )}\n            {selectedDevice.description && (\n              <div className=\"pt-2 border-t\">\n                <span className=\"font-medium\">Description:</span>\n                <p className=\"text-gray-600 mt-1\">{selectedDevice.description}</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NetworkMap;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/AddDeviceModal.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useNetwork } from '@/context/NetworkContext';\nimport { Device } from '@/types/network';\n\nconst deviceSchema = z.object({\n  name: z.string().min(1, 'Device name is required'),\n  type: z.enum(['Router', 'Switch', 'Firewall', 'Server', 'Access Point', 'Other']),\n  ip: z.string().regex(/^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$/, 'Invalid IP address format'),\n  status: z.enum(['online', 'offline', 'maintenance']),\n  positionX: z.number().optional(),\n  positionY: z.number().optional(),\n  description: z.string().optional(),\n  location: z.string().optional(),\n  vendor: z.string().optional(),\n  model: z.string().optional(),\n});\n\ntype DeviceFormData = z.infer<typeof deviceSchema>;\n\ninterface AddDeviceModalProps {\n  onClose: () => void;\n}\n\nconst AddDeviceModal: React.FC<AddDeviceModalProps> = ({ onClose }) => {\n  const { addDevice } = useNetwork();\n  \n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n    reset\n  } = useForm<DeviceFormData>({\n    resolver: zodResolver(deviceSchema),\n    defaultValues: {\n      status: 'online',\n      type: 'Router',\n      positionX: Math.floor(Math.random() * 600) + 100,\n      positionY: Math.floor(Math.random() * 400) + 100,\n    }\n  });\n\n  const onSubmit = async (data: DeviceFormData) => {\n    try {\n      const newDevice: Device = {\n        id: Date.now().toString(),\n        name: data.name,\n        type: data.type,\n        ip: data.ip,\n        status: data.status,\n        position: data.positionX && data.positionY ? { x: data.positionX, y: data.positionY } : undefined,\n        description: data.description || undefined,\n        location: data.location || undefined,\n        vendor: data.vendor || undefined,\n        model: data.model || undefined,\n      };\n\n      addDevice(newDevice);\n      reset();\n      onClose();\n    } catch (error) {\n      console.error('Error adding device:', error);\n    }\n  };\n\n  const handleOverlayClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div \n      className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\"\n      onClick={handleOverlayClick}\n    >\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">Add New Device</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-gray-600 text-2xl font-light leading-none\"\n          >\n            Ã—\n          </button>\n        </div>\n\n        {/* Form */}\n        <form onSubmit={handleSubmit(onSubmit)} className=\"p-6 space-y-6\">\n          {/* Basic Information */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 border-b pb-2\">Basic Information</h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Device Name *\n                </label>\n                <input\n                  {...register('name')}\n                  type=\"text\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter device name\"\n                />\n                {errors.name && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.name.message}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Device Type *\n                </label>\n                <select\n                  {...register('type')}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"Router\">Router</option>\n                  <option value=\"Switch\">Switch</option>\n                  <option value=\"Firewall\">Firewall</option>\n                  <option value=\"Server\">Server</option>\n                  <option value=\"Access Point\">Access Point</option>\n                  <option value=\"Other\">Other</option>\n                </select>\n                {errors.type && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.type.message}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  IP Address *\n                </label>\n                <input\n                  {...register('ip')}\n                  type=\"text\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono\"\n                  placeholder=\"192.168.1.1\"\n                />\n                {errors.ip && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.ip.message}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Status *\n                </label>\n                <select\n                  {...register('status')}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"online\">Online</option>\n                  <option value=\"offline\">Offline</option>\n                  <option value=\"maintenance\">Maintenance</option>\n                </select>\n                {errors.status && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.status.message}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Position */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 border-b pb-2\">Map Position</h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  X Position\n                </label>\n                <input\n                  {...register('positionX', { valueAsNumber: true })}\n                  type=\"number\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"100\"\n                />\n                {errors.positionX && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.positionX.message}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Y Position\n                </label>\n                <input\n                  {...register('positionY', { valueAsNumber: true })}\n                  type=\"number\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"100\"\n                />\n                {errors.positionY && (\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.positionY.message}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Additional Information */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium text-gray-900 border-b pb-2\">Additional Information</h3>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Location\n                </label>\n                <input\n                  {...register('location')}\n                  type=\"text\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Data Center A\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Vendor\n                </label>\n                <input\n                  {...register('vendor')}\n                  type=\"text\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Cisco\"\n                />\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Model\n                </label>\n                <input\n                  {...register('model')}\n                  type=\"text\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"ASR 9000\"\n                />\n              </div>\n\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Description\n                </label>\n                <textarea\n                  {...register('description')}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                  placeholder=\"Device description...\"\n                />\n              </div>\n            </div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-end space-x-3 pt-6 border-t\">\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? 'Adding...' : 'Add Device'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddDeviceModal;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1332, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/NetworkList.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { useNetwork } from '@/context/NetworkContext';\nimport { Device } from '@/types/network';\nimport AddDeviceModal from './AddDeviceModal';\n\nconst NetworkList = () => {\n  const { devices, stats, selectedDevice, setSelectedDevice, searchDevices } = useNetwork();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filterStatus, setFilterStatus] = useState<'all' | 'online' | 'offline' | 'maintenance'>('all');\n  const [filterType, setFilterType] = useState<'all' | Device['type']>('all');\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  const getStatusColor = (status: Device['status']) => {\n    switch (status) {\n      case 'online':\n        return 'bg-green-100 text-green-800';\n      case 'offline':\n        return 'bg-red-100 text-red-800';\n      case 'maintenance':\n        return 'bg-amber-100 text-amber-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getTypeIcon = (type: Device['type']) => {\n    switch (type) {\n      case 'Router':\n        return 'R';\n      case 'Switch':\n        return 'S';\n      case 'Firewall':\n        return 'F';\n      case 'Server':\n        return 'SV';\n      case 'Access Point':\n        return 'AP';\n      default:\n        return '?';\n    }\n  };\n\n  const filteredDevices = devices.filter(device => {\n    const matchesSearch = searchQuery === '' || \n      device.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      device.ip.includes(searchQuery) ||\n      device.location?.toLowerCase().includes(searchQuery.toLowerCase());\n    \n    const matchesStatus = filterStatus === 'all' || device.status === filterStatus;\n    const matchesType = filterType === 'all' || device.type === filterType;\n    \n    return matchesSearch && matchesStatus && matchesType;\n  });\n\n  return (\n    <div className=\"h-full flex flex-col bg-gray-50 border-r\">\n      {/* Header */}\n      <div className=\"p-4 border-b bg-white\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-lg font-semibold\">Network Devices</h2>\n          <button\n            onClick={() => setShowAddModal(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\n          >\n            Add Device\n          </button>\n        </div>\n        \n        {/* Stats */}\n        <div className=\"grid grid-cols-2 gap-2 mb-4\">\n          <div className=\"bg-green-50 p-2 rounded text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{stats.onlineDevices}</div>\n            <div className=\"text-xs text-green-600\">Online</div>\n          </div>\n          <div className=\"bg-red-50 p-2 rounded text-center\">\n            <div className=\"text-lg font-bold text-red-600\">{stats.offlineDevices}</div>\n            <div className=\"text-xs text-red-600\">Offline</div>\n          </div>\n          <div className=\"bg-amber-50 p-2 rounded text-center\">\n            <div className=\"text-lg font-bold text-amber-600\">{stats.maintenanceDevices}</div>\n            <div className=\"text-xs text-amber-600\">Maintenance</div>\n          </div>\n          <div className=\"bg-blue-50 p-2 rounded text-center\">\n            <div className=\"text-lg font-bold text-blue-600\">{stats.totalDevices}</div>\n            <div className=\"text-xs text-blue-600\">Total</div>\n          </div>\n        </div>\n\n        {/* Search */}\n        <div className=\"mb-3\">\n          <input\n            type=\"text\"\n            placeholder=\"Search devices...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"w-full px-3 py-2 border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          />\n        </div>\n\n        {/* Filters */}\n        <div className=\"space-y-2\">\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">Status</label>\n            <select\n              value={filterStatus}\n              onChange={(e) => setFilterStatus(e.target.value as any)}\n              className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">All Status</option>\n              <option value=\"online\">Online</option>\n              <option value=\"offline\">Offline</option>\n              <option value=\"maintenance\">Maintenance</option>\n            </select>\n          </div>\n          <div>\n            <label className=\"block text-xs font-medium text-gray-700 mb-1\">Type</label>\n            <select\n              value={filterType}\n              onChange={(e) => setFilterType(e.target.value as any)}\n              className=\"w-full px-2 py-1 border rounded text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">All Types</option>\n              <option value=\"Router\">Router</option>\n              <option value=\"Switch\">Switch</option>\n              <option value=\"Firewall\">Firewall</option>\n              <option value=\"Server\">Server</option>\n              <option value=\"Access Point\">Access Point</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Device List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {filteredDevices.length === 0 ? (\n          <div className=\"p-4 text-center text-gray-500\">\n            <p className=\"text-sm\">No devices found</p>\n            {searchQuery && (\n              <p className=\"text-xs mt-1\">Try adjusting your search or filters</p>\n            )}\n          </div>\n        ) : (\n          <div className=\"p-2 space-y-1\">\n            {filteredDevices.map((device) => (\n              <div\n                key={device.id}\n                onClick={() => setSelectedDevice(device)}\n                className={`p-3 rounded-lg cursor-pointer transition-all duration-200 ${\n                  selectedDevice?.id === device.id\n                    ? 'bg-blue-100 border-2 border-blue-300 shadow-sm'\n                    : 'bg-white border border-gray-200 hover:bg-gray-50 hover:shadow-sm'\n                }`}\n              >\n                <div className=\"flex items-start justify-between mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center text-xs font-bold text-gray-600\">\n                      {getTypeIcon(device.type)}\n                    </div>\n                    <div>\n                      <h3 className=\"font-medium text-sm text-gray-900 truncate\">\n                        {device.name}\n                      </h3>\n                      <p className=\"text-xs text-gray-500 font-mono\">{device.ip}</p>\n                    </div>\n                  </div>\n                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(device.status)}`}>\n                    {device.status}\n                  </span>\n                </div>\n                \n                <div className=\"space-y-1\">\n                  <div className=\"flex justify-between text-xs\">\n                    <span className=\"text-gray-500\">Type:</span>\n                    <span className=\"text-gray-700\">{device.type}</span>\n                  </div>\n                  {device.location && (\n                    <div className=\"flex justify-between text-xs\">\n                      <span className=\"text-gray-500\">Location:</span>\n                      <span className=\"text-gray-700 truncate ml-2\">{device.location}</span>\n                    </div>\n                  )}\n                  {device.vendor && (\n                    <div className=\"flex justify-between text-xs\">\n                      <span className=\"text-gray-500\">Vendor:</span>\n                      <span className=\"text-gray-700\">{device.vendor}</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Results Count */}\n      <div className=\"p-3 border-t bg-white\">\n        <p className=\"text-xs text-gray-500 text-center\">\n          Showing {filteredDevices.length} of {devices.length} devices\n        </p>\n      </div>\n\n      {/* Add Device Modal */}\n      {showAddModal && (\n        <AddDeviceModal onClose={() => setShowAddModal(false)} />\n      )}\n    </div>\n  );\n};\n\nexport default NetworkList;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1945, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport NetworkMap from '@/components/NetworkMap';\nimport NetworkList from '@/components/NetworkList';\n\nexport default function Home() {\n  const [activeView, setActiveView] = useState<'map' | 'list'>('map');\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-2xl font-bold text-gray-900\">ISP Network Monitor</h1>\n              <span className=\"ml-3 px-2 py-1 bg-blue-100 text-blue-800 text-xs font-medium rounded-full\">\n                NetBox-like Tool\n              </span>\n            </div>\n            \n            {/* View Toggle */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex bg-gray-100 rounded-lg p-1\">\n                <button\n                  onClick={() => setActiveView('map')}\n                  className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                    activeView === 'map'\n                      ? 'bg-white text-gray-900 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  Network Map\n                </button>\n                <button\n                  onClick={() => setActiveView('list')}\n                  className={`px-4 py-2 text-sm font-medium rounded-md transition-colors ${\n                    activeView === 'list'\n                      ? 'bg-white text-gray-900 shadow-sm'\n                      : 'text-gray-600 hover:text-gray-900'\n                  }`}\n                >\n                  Device List\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"bg-white rounded-lg shadow-sm border\">\n          {activeView === 'map' ? (\n            <div className=\"h-[calc(100vh-200px)]\">\n              <NetworkMap />\n            </div>\n          ) : (\n            <div className=\"flex h-[calc(100vh-200px)]\">\n              <div className=\"w-full\">\n                <NetworkList />\n              </div>\n            </div>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAE7D,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAmC;;;;;;kDACjD,6LAAC;wCAAK,WAAU;kDAA4E;;;;;;;;;;;;0CAM9F,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,SAAS,IAAM,cAAc;4CAC7B,WAAW,CAAC,2DAA2D,EACrE,eAAe,QACX,qCACA,qCACJ;sDACH;;;;;;sDAGD,6LAAC;4CACC,SAAS,IAAM,cAAc;4CAC7B,WAAW,CAAC,2DAA2D,EACrE,eAAe,SACX,qCACA,qCACJ;sDACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUX,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;8BACZ,eAAe,sBACd,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,mIAAA,CAAA,UAAU;;;;;;;;;6CAGb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,oIAAA,CAAA,UAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5B;GA/DwB;KAAA","debugId":null}}]
}