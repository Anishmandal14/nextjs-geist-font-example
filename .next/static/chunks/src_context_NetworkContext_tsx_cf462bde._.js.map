{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/context/NetworkContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\nimport { Device, Connection, NetworkStats } from '@/types/network';\n\ninterface NetworkContextProps {\n  devices: Device[];\n  connections: Connection[];\n  stats: NetworkStats;\n  selectedDevice: Device | null;\n  addDevice: (device: Device) => void;\n  updateDevice: (id: string, updates: Partial<Device>) => void;\n  removeDevice: (id: string) => void;\n  addConnection: (connection: Connection) => void;\n  removeConnection: (id: string) => void;\n  setSelectedDevice: (device: Device | null) => void;\n  searchDevices: (query: string) => Device[];\n}\n\nconst NetworkContext = createContext<NetworkContextProps | undefined>(undefined);\n\n// Sample/mock data for demonstration\nconst initialDevices: Device[] = [\n  {\n    id: '1',\n    name: 'Core Router',\n    type: 'Router',\n    ip: '10.0.0.1',\n    status: 'online',\n    position: { x: 200, y: 100 },\n    description: 'Main core router for ISP backbone',\n    location: 'Data Center A',\n    vendor: 'Cisco',\n    model: 'ASR 9000'\n  },\n  {\n    id: '2',\n    name: 'Distribution Switch',\n    type: 'Switch',\n    ip: '10.0.1.1',\n    status: 'online',\n    position: { x: 400, y: 200 },\n    description: 'Primary distribution switch',\n    location: 'Data Center A',\n    vendor: 'Juniper',\n    model: 'EX4300'\n  },\n  {\n    id: '3',\n    name: 'Edge Firewall',\n    type: 'Firewall',\n    ip: '10.0.2.1',\n    status: 'online',\n    position: { x: 100, y: 250 },\n    description: 'Perimeter security firewall',\n    location: 'Data Center A',\n    vendor: 'Palo Alto',\n    model: 'PA-5220'\n  },\n  {\n    id: '4',\n    name: 'Access Switch 1',\n    type: 'Switch',\n    ip: '10.0.3.1',\n    status: 'offline',\n    position: { x: 600, y: 150 },\n    description: 'Access layer switch - Building 1',\n    location: 'Building 1',\n    vendor: 'Cisco',\n    model: 'Catalyst 2960'\n  },\n  {\n    id: '5',\n    name: 'Wireless Controller',\n    type: 'Access Point',\n    ip: '10.0.4.1',\n    status: 'maintenance',\n    position: { x: 300, y: 350 },\n    description: 'Centralized wireless controller',\n    location: 'Data Center A',\n    vendor: 'Aruba',\n    model: '7030'\n  }\n];\n\nconst initialConnections: Connection[] = [\n  {\n    id: 'c1',\n    sourceId: '1',\n    targetId: '2',\n    label: 'Trunk Link',\n    type: 'fiber',\n    bandwidth: '10Gbps'\n  },\n  {\n    id: 'c2',\n    sourceId: '1',\n    targetId: '3',\n    label: 'Security Link',\n    type: 'ethernet',\n    bandwidth: '1Gbps'\n  },\n  {\n    id: 'c3',\n    sourceId: '2',\n    targetId: '4',\n    label: 'Access Link',\n    type: 'ethernet',\n    bandwidth: '1Gbps'\n  },\n  {\n    id: 'c4',\n    sourceId: '2',\n    targetId: '5',\n    label: 'Management Link',\n    type: 'ethernet',\n    bandwidth: '100Mbps'\n  }\n];\n\nexport const NetworkProvider = ({ children }: { children: ReactNode }) => {\n  const [devices, setDevices] = useState<Device[]>(initialDevices);\n  const [connections, setConnections] = useState<Connection[]>(initialConnections);\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null);\n\n  const calculateStats = (): NetworkStats => {\n    const totalDevices = devices.length;\n    const onlineDevices = devices.filter(d => d.status === 'online').length;\n    const offlineDevices = devices.filter(d => d.status === 'offline').length;\n    const maintenanceDevices = devices.filter(d => d.status === 'maintenance').length;\n\n    return {\n      totalDevices,\n      onlineDevices,\n      offlineDevices,\n      maintenanceDevices\n    };\n  };\n\n  const addDevice = (device: Device) => {\n    setDevices(prev => [...prev, device]);\n  };\n\n  const updateDevice = (id: string, updates: Partial<Device>) => {\n    setDevices(prev => prev.map(device => \n      device.id === id ? { ...device, ...updates } : device\n    ));\n  };\n\n  const removeDevice = (id: string) => {\n    setDevices(prev => prev.filter(device => device.id !== id));\n    setConnections(prev => prev.filter(conn => \n      conn.sourceId !== id && conn.targetId !== id\n    ));\n    if (selectedDevice?.id === id) {\n      setSelectedDevice(null);\n    }\n  };\n\n  const addConnection = (connection: Connection) => {\n    setConnections(prev => [...prev, connection]);\n  };\n\n  const removeConnection = (id: string) => {\n    setConnections(prev => prev.filter(conn => conn.id !== id));\n  };\n\n  const searchDevices = (query: string): Device[] => {\n    if (!query.trim()) return devices;\n    \n    const lowercaseQuery = query.toLowerCase();\n    return devices.filter(device =>\n      device.name.toLowerCase().includes(lowercaseQuery) ||\n      device.ip.includes(query) ||\n      device.type.toLowerCase().includes(lowercaseQuery) ||\n      device.location?.toLowerCase().includes(lowercaseQuery)\n    );\n  };\n\n  const value: NetworkContextProps = {\n    devices,\n    connections,\n    stats: calculateStats(),\n    selectedDevice,\n    addDevice,\n    updateDevice,\n    removeDevice,\n    addConnection,\n    removeConnection,\n    setSelectedDevice,\n    searchDevices\n  };\n\n  return (\n    <NetworkContext.Provider value={value}>\n      {children}\n    </NetworkContext.Provider>\n  );\n};\n\nexport const useNetwork = () => {\n  const context = useContext(NetworkContext);\n  if (context === undefined) {\n    throw new Error('useNetwork must be used within a NetworkProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}